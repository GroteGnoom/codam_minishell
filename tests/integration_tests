#!/bin/bash
#set -x
set -e

function shell_test_error()
{
	set +e
	echo $1 | ../minishell >/dev/null 2>minishell_err
	echo $1 | valgrind --leak-check=full ../minishell > minishell_out 2>leaks_output
	echo $1 | bash > bash_out 2> bash_err
	set -e
	diff minishell_out bash_out || { echo "test failed for: \"$1\""; exit 1; }
	diff minishell_err bash_err || { echo "error output test failed for: \"$1\""; exit 1; }
	grep -q ' 0 errors from 0 contexts' leaks_output || { echo "found valgrind error for for: \"$1\""; cat leaks_output; exit 1; }
}

function shell_test()
{
	echo $1 | valgrind --leak-check=full ../minishell > minishell_out 2>leaks_output
	echo $1 | bash > bash_out 2> bash_err
	diff minishell_out bash_out || { echo "test failed for: \"$1\""; exit 1; }
	grep -q ' 0 errors from 0 contexts' leaks_output || { echo "found valgrind error for for: \"$1\""; cat leaks_output; exit 1; }
}

function output_test()
{
	export OUTFILE=minishell_outfile
	echo $1 | valgrind --leak-check=full ../minishell > minishell_stdout 2>leaks_output
	export OUTFILE=bash_outfile
	echo $1 | bash > bash_stdout
	diff minishell_stdout bash_stdout || { echo "stdout of output test failed for: \"$1\""; exit 1;}
	diff minishell_outfile bash_outfile || { echo "outfile of output test failed for: \"$1\""; exit 1;}
	grep -q ' 0 errors from 0 contexts' leaks_output || { echo "found valgrind error for for: \"$1\""; cat leaks_output; exit 1; }
}

make DEBUG=1 LEAKS=1 -C ..

shell_test 'echo ls
ls'
shell_test 'echo '*''
shell_test 'echo *bla'
shell_test 'echo "$?"lala $?asdf $PATH '$PATH' "$PATH" * *bla *"bla"'
shell_test 'ls | ls | ls | ls | ls | ls'
shell_test 'echo *konijn'
shell_test 'echo * *bla'
shell_test 'ls *.c | cat'
shell_test 'echo *$PATH'
shell_test 'echo $PATH*'
shell_test 'echo "*"$PATH'
shell_test 'echo $PATH"*"'
shell_test '/bin/ls'
shell_test 'echo a"bc"d'
shell_test 'echo a'bcd'e'
shell_test 'echo $HOME'
shell_test 'echo '$HOME''
shell_test 'echo "$HOME"'
shell_test 'echo $HO"ME"'
shell_test 'echo $"HOME"'
shell_test 'echo "'$HOME'"'
shell_test 'echo '"$HOME"''
shell_test 'echo -nABC'
shell_test 'echo "$     a"'
shell_test 'pwd'
shell_test 'pwd lalala'
shell_test_error 'ls ||| cat'
output_test 'ls | cat > $OUTFILE'
output_test '< test_shell_split.c grep 'a'|grep 'm' | wc -l|cat -e > $OUTFILE'
